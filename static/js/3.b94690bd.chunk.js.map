{"version":3,"sources":["components/PersonPage/PersonFilms/PersonFilms.module.css","components/PersonPage/PersonFilms/PersonFilms.jsx"],"names":["module","exports","PersonFilms","personFilms","useState","filmsName","setFilmsName","useEffect","a","fimlsHTTPS","map","url","changeHTTP","makeConcurrantRequest","response","className","styles","wrapper","list__container","sort","z","episode_id","title","list__item","item__episode","item__column","item__title"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,gBAAkB,qCAAqC,WAAa,gCAAgC,cAAgB,mCAAmC,aAAe,kCAAkC,YAAc,mC,yJC2ChQC,EApCK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAWA,OATAC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,6DACOC,EAAaN,EAAYO,KAAI,SAAAC,GAAG,OAAIC,YAAWD,MADtD,SAEwBE,YAAsBJ,GAF9C,OAEOK,EAFP,OAICR,EAAaQ,GAJd,0CAAD,KAMC,IAGD,qBAAKC,UAAWC,IAAOC,QAAvB,SACE,oBAAIF,UAAWC,IAAOE,gBAAtB,SACGb,EACAc,MAAK,SAACX,EAAGY,GAAJ,OAAUZ,EAAEa,WAAaD,EAAEC,cAChCX,KAAI,gBAAGY,EAAH,EAAGA,MAAOD,EAAV,EAAUA,WAAV,OACH,qBACAN,UAAWC,IAAOO,WADlB,UAGE,uBAAMR,UAAWC,IAAOQ,cAAxB,sBAAiDH,KACjD,sBAAMN,UAAWC,IAAOS,aAAxB,eACA,sBAAMV,UAAWC,IAAOU,YAAxB,SAAsCJ,MAHnCD","file":"static/js/3.b94690bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonFilms_wrapper__3WweJ\",\"list__container\":\"PersonFilms_list__container__gVDkM\",\"list__item\":\"PersonFilms_list__item__32PKW\",\"item__episode\":\"PersonFilms_item__episode__2JT4U\",\"item__column\":\"PersonFilms_item__column__3_g3k\",\"item__title\":\"PersonFilms_item__title__1ghhd\"};","import React, { useState, useEffect } from 'react'\n\nimport { makeConcurrantRequest, changeHTTP } from '@utils/network'\n\nimport PropTypes from 'prop-types'\n\nimport styles from './PersonFilms.module.css'\n\nconst PersonFilms = ({ personFilms }) => {\n  const [filmsName, setFilmsName] = useState([])\n\n  useEffect(() => {\n    (async () => {\n      const fimlsHTTPS = personFilms.map(url => changeHTTP(url))\n      const response = await makeConcurrantRequest(fimlsHTTPS)\n\n      setFilmsName(response)\n    })()\n  }, [])\n\n  return (\n    <div className={styles.wrapper}>\n      <ul className={styles.list__container}>\n        {filmsName\n        .sort((a, z) => a.episode_id - z.episode_id)        \n        .map(({ title, episode_id }) => \n          <li\n          className={styles.list__item}\n          key={episode_id}>\n            <span className={styles.item__episode}>Episode: {episode_id}</span>\n            <span className={styles.item__column}>:</span>\n            <span className={styles.item__title}>{title}</span>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\n\nPersonFilms.propTypes = {\n  personFilms: PropTypes.array\n}\n\nexport default PersonFilms"],"sourceRoot":""}